package com.nsdc.regressionTest;

import org.openqa.selenium.By;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import com.nsdc.generic.ReadMultipleDataFromExcel;
import com.nsdc.pages.EnterLoginPage;
import com.nsdc.pages.LoginPage;
import com.nsdc.pages.RegistrationPage;
import com.nsdc.testConfig.DatabaseConnection;
import com.nsdc.testConfig.TestConfiguration;

public class RegisterAndLoginTestSC_01 extends TestConfiguration
{
    
    @DataProvider
    public Object[][] registrationData()
    {
        return ReadMultipleDataFromExcel.getExcelData("./TestData/TP-TestData-Regression.xls", "RegisterSC01TC01");
    }
    
    @Test(dataProvider="registrationData")
    public void userRegistrationTC_01(String userType, String spocName, String email, String mobile, String emailOTP, String mobileOTP) throws Exception
    {
    	WebDriverWait wait = new WebDriverWait(driver, 20);
    	wait.until(ExpectedConditions.visibilityofElementLocated(By.xpath("//button[contains(text(),'Register'")));
        //DatabaseConnection.deleteTrainingPartner(email);
        LoginPage lp = new LoginPage(driver);
        lp.clickRegister();
        RegistrationPage rp = new RegistrationPage(driver);
        rp.selectDropdownList(userType);
        rp.enterSPOCName(spocName);
        rp.enterEmail(email);
        rp.enterMobile(mobile);
        rp.clickRegister();
     
        rp.enterEmailOTP(emailOTP);
        rp.enterMobileOTP(mobileOTP);
        WebDriverWait wait = new WebDriverWait(driver,20);
        rp.clickVerify();
        wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='text-Center sucess-msg']")));
        Assert.assertEquals(driver.findElement(By.xpath("//div[@class='text-Center sucess-msg']")).getText(), "We have sent the UserName and Password to the registered email address please login with those credentials.");
    }
    
    @DataProvider
    public Object[][] loginSuccess()
    {
        return ReadMultipleDataFromExcel.getLoginCredentials("./TestData/TP-TestData-Regression.xls", "LoginPassSC01TC02");
    }
    
    @Test(dataProvider="loginSuccess")
    public void verifyLoginSuccessTC_02(String username, String password) throws Exception
    {
        Thread.sleep(2000);
        LoginPage lp = new LoginPage(driver);
        lp.clickLogin();
        EnterLoginPage elp = new EnterLoginPage(driver);
        elp.performlogin(username, password);
        Thread.sleep(4000);
        Assert.assertEquals(driver.findElement(By.xpath("//span[@class='m-topbar__welcome']")).getText(), username);
    }
    
    @DataProvider
    public Object[][] loginFailure()
    {
        return ReadMultipleDataFromExcel.getLoginCredentials("./TestData/TP-TestData-Regression.xls", "LoginFailureSC01TC03");
    }
    
    @Test(dataProvider="loginFailure")
    public void verifyLoginFailureTC_03(String username, String password) throws Exception
    {
        Thread.sleep(2000);
        LoginPage lp = new LoginPage(driver);
        lp.clickLogin();
        EnterLoginPage elp = new EnterLoginPage(driver);
        elp.performlogin(username, password);
        Thread.sleep(2000);
        Assert.assertEquals(driver.findElement(By.cssSelector(".toast-message")).getText(), "username or password invalid");
    }
    
    @Test
    public void LoginFailWithoutEnteringCredentialsTC_04() throws Exception
    {
        Thread.sleep(2000);
        LoginPage lp = new LoginPage(driver);
        lp.clickLogin();
        EnterLoginPage elp = new EnterLoginPage(driver);
        elp.clickLoginToSubmit();
        Thread.sleep(2000);
        Assert.assertEquals(driver.findElement(By.cssSelector(".toast-message")).getText(), "Username or Password should not be empty");
    }
}

